{"ast":null,"code":"import _toConsumableArray from \"/Users/robbert.olierook/github/hooks-vs-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/robbert.olierook/github/hooks-vs-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var toggle = function toggle(toSet) {\n    var newState = state.map(function (a) {\n      if (a.alertType === \"warning\") {\n        a.alertType = \"danger\";\n      }\n\n      if (toSet) {\n        if (a.alertType === \"success\") {\n          a.alertType = \"warning\";\n        }\n      }\n\n      return _objectSpread({}, a);\n    });\n    newState[action.key].alertType = toSet ? \"success\" : \"warning\";\n    return newState;\n  };\n\n  switch (action.type) {\n    case \"ADD_ALERT\":\n      return [].concat(_toConsumableArray(state), [{\n        text: action.text,\n        alertType: \"danger\"\n      }]);\n\n    case \"SET_FAVORITE\":\n      {\n        return toggle(true);\n      }\n\n    case \"UNSET_FAVORITE\":\n      {\n        return toggle(false);\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/robbert.olierook/github/hooks-vs-redux/src/reducers/alerts.js"],"names":["state","action","toggle","toSet","newState","map","a","alertType","key","type","text"],"mappings":";;AAAA,gBAAe,YAAwB;AAAA,MAAvBA,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAU,UAAAC,CAAC,EAAI;AAC9B,UAAIA,CAAC,CAACC,SAAF,KAAgB,SAApB,EAA+B;AAC7BD,QAAAA,CAAC,CAACC,SAAF,GAAc,QAAd;AACD;;AACD,UAAIJ,KAAJ,EAAW;AACT,YAAIG,CAAC,CAACC,SAAF,KAAgB,SAApB,EAA+B;AAC7BD,UAAAA,CAAC,CAACC,SAAF,GAAc,SAAd;AACD;AACF;;AACD,+BAAYD,CAAZ;AACD,KAVgB,CAAjB;AAWAF,IAAAA,QAAQ,CAACH,MAAM,CAACO,GAAR,CAAR,CAAqBD,SAArB,GAAiCJ,KAAK,GAAG,SAAH,GAAe,SAArD;AACA,WAAOC,QAAP;AACD,GAdD;;AAeA,UAAQH,MAAM,CAACQ,IAAf;AACE,SAAK,WAAL;AACE,0CAAWT,KAAX,IAAkB;AAAEU,QAAAA,IAAI,EAAET,MAAM,CAACS,IAAf;AAAqBH,QAAAA,SAAS,EAAE;AAAhC,OAAlB;;AACF,SAAK,cAAL;AAAqB;AACnB,eAAOL,MAAM,CAAC,IAAD,CAAb;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,eAAOA,MAAM,CAAC,KAAD,CAAb;AACD;;AACD;AACE,aAAOF,KAAP;AAVJ;AAYD,CA5BD","sourcesContent":["export default (state = [], action) => {\n  const toggle = toSet => {\n    const newState = state.map(a => {\n      if (a.alertType === \"warning\") {\n        a.alertType = \"danger\";\n      }\n      if (toSet) {\n        if (a.alertType === \"success\") {\n          a.alertType = \"warning\";\n        }\n      }\n      return { ...a };\n    });\n    newState[action.key].alertType = toSet ? \"success\" : \"warning\";\n    return newState;\n  };\n  switch (action.type) {\n    case \"ADD_ALERT\":\n      return [...state, { text: action.text, alertType: \"danger\" }];\n    case \"SET_FAVORITE\": {\n      return toggle(true);\n    }\n    case \"UNSET_FAVORITE\": {\n      return toggle(false);\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}