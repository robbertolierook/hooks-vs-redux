{"ast":null,"code":"import _slicedToArray from \"/Users/robbert.olierook/github/hooks-vs-redux/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/robbert.olierook/github/hooks-vs-redux/src/App.js\";\nimport React from \"react\";\nimport { Button } from \"@olierook/global-react-components\";\nimport Alertbox from \"./Alertbox\";\nimport { addAlert } from \"./actions/actionCreators\";\nimport { useStateValue } from \"./state\";\n\nvar App = function App(props) {\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 2),\n      alerts = _useStateValue2[0].alerts,\n      dispatch = _useStateValue2[1];\n\n  var alertForm = React.useRef(null);\n  var alertText = React.useRef(null);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var text = alertText.current.value;\n    addAlert(text)(dispatch);\n    alertForm.current.reset();\n  };\n\n  var renderAlerts = function renderAlerts(alert, i) {\n    return React.createElement(Alertbox, Object.assign({}, alert, {\n      key: i,\n      id: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    ref: alertForm,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    secondary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Add an alert\"), React.createElement(\"input\", {\n    style: {\n      margin: 20,\n      height: 50\n    },\n    type: \"text\",\n    ref: alertText,\n    placeholder: \"Write an alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), alerts.map(renderAlerts));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/robbert.olierook/github/hooks-vs-redux/src/App.js"],"names":["React","Button","Alertbox","addAlert","useStateValue","App","props","alerts","dispatch","alertForm","useRef","alertText","handleSubmit","e","preventDefault","text","current","value","reset","renderAlerts","alert","i","margin","height","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,aAAT,QAA8B,SAA9B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,uBACYF,aAAa,EADzB;AAAA;AAAA,MACVG,MADU,sBACVA,MADU;AAAA,MACAC,QADA;;AAEnB,MAAMC,SAAS,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAlB;AACA,MAAMC,SAAS,GAAGX,KAAK,CAACU,MAAN,CAAa,IAAb,CAAlB;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,IAAI,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,KAA/B;AACAd,IAAAA,QAAQ,CAACY,IAAD,CAAR,CAAeP,QAAf;AACAC,IAAAA,SAAS,CAACO,OAAV,CAAkBE,KAAlB;AACD,GALD;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,CAAR;AAAA,WAAc,oBAAC,QAAD,oBAAcD,KAAd;AAAqB,MAAA,GAAG,EAAEC,CAA1B;AAA6B,MAAA,EAAE,EAAEA,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;AAAA,GAArB;;AAEA,SACE,0CACE;AAAM,IAAA,GAAG,EAAEZ,SAAX;AAAsB,IAAA,QAAQ,EAAEG,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAEZ,SAHP;AAIE,IAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAYGJ,MAAM,CAACiB,GAAP,CAAWL,YAAX,CAZH,CADF;AAgBD,CA7BD;;AA+BA,eAAed,GAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"@olierook/global-react-components\";\nimport Alertbox from \"./Alertbox\";\nimport { addAlert } from \"./actions/actionCreators\";\nimport { useStateValue } from \"./state\";\n\nconst App = props => {\n  const [{ alerts }, dispatch] = useStateValue();\n  const alertForm = React.useRef(null);\n  const alertText = React.useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const text = alertText.current.value;\n    addAlert(text)(dispatch);\n    alertForm.current.reset();\n  };\n\n  const renderAlerts = (alert, i) => <Alertbox {...alert} key={i} id={i} />;\n\n  return (\n    <>\n      <form ref={alertForm} onSubmit={handleSubmit}>\n        <Button type=\"submit\" secondary>\n          Add an alert\n        </Button>\n        <input\n          style={{ margin: 20, height: 50 }}\n          type=\"text\"\n          ref={alertText}\n          placeholder=\"Write an alert\"\n        />\n      </form>\n      {alerts.map(renderAlerts)}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}